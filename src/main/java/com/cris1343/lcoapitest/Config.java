package com.cris1343.lcoapitest;

import com.cris1343.lcoapitest.gui.windows.ChangeApiKey;
import org.json.JSONObject;

import java.awt.*;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

public class Config {
    private static File file;
    private static PrintWriter writer;
    private static BufferedReader reader;
    private static JSONObject json;

    public static void initialize() {
        try {
            file = new File("config.json");

            boolean fileCreated = file.createNewFile();
            reader = new BufferedReader(new FileReader(file));
            if (fileCreated) {
//                Utility.log("Configuration file created");
                json = new JSONObject();
            } else
                json = new JSONObject(readAll());

            writer = new PrintWriter(new BufferedWriter(new FileWriter(file)));

            if (!json.has("__note__"))
                json.put("__note__", "Please do not edit this file unless you know what you're doing");

            if (!json.has("apiKey"))
                json.put("apiKey", "");

            if (!json.has("showLogAtStartup"))
                json.put("showLogAtStartup", false);

            if (!json.has("autoScrollLog"))
                json.put("autoScrollLog", true);

            writer.write(json.toString());
            writer.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void edit(String key, Object value) {
        try {
            json.put(key, value);
            writer = new PrintWriter(new BufferedWriter(new FileWriter(file)));
            writer.print(json.toString());
            writer.close();

            Utility.log("Configuration file edited");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void load() {
        if (!json.getString("apiKey").isEmpty())
            Http.apiKey = json.getString("apiKey");
        else {
            for (Component comp : Main.mainMenu.actions.getComponents())
                comp.setEnabled(false);

            new ChangeApiKey();
        }

        Main.log.setVisible(json.getBoolean("showLogAtStartup"));
        Main.mainMenu.log.setSelected(json.getBoolean("showLogAtStartup"));
        Main.mainMenu.logAtStartup.setSelected(json.getBoolean("showLogAtStartup"));

        Main.log.autoScroll.setSelected(json.getBoolean("autoScrollLog"));
    }

    private static String readAll() throws IOException {
        String lines = "";
        while (true) {
            String line = reader.readLine();
            if (line == null)
                break;
            else
                lines = lines.concat(line);
        }
        return lines;
    }
}
